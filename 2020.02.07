//加一

/*
给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。
最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:
输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123

示例 2:
输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321
*/

class Solution{
public:
    vector<int> plusOne(vector<int>& digits) {
         //直接模拟十进制加法运算法则
        digits[digits.size()-1]++;
        for(int i=digits.size()-1;i>0;--i){
            if(digits[i]>9){
                digits[i-1]++;
                digits[i]%=10;
            }
        }
        //对最高位进行处理
        vector<int>::iterator it;
        it=digits.begin();
        if(digits[0]>9){
            digits[0]%=10;
            digits.insert(it,1);
        }
        return digits;
    }
};




