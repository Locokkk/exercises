//外观数列

/*
「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下：
1.     1
2.     11
3.     21
4.     1211
5.     111221

1 被读作  "one 1"  ("一个一") , 即 11
11 被读作 "two 1s" ("两个一"）, 即 21
21 被读作 "one 2",  "one 1" （"一个二" ,  "一个一") , 即 1211
给定一个正整数 n（1 ≤ n ≤ 30），输出外观数列的第 n 项
注意：整数序列中的每一项将表示为一个字符串
示例 1:
输入: 1
输出: "1"

示例 2:
输入: 4
输出: "1211"
*/

char * countAndSay(int n){
    char *res = (char*)malloc(sizeof(char) * 5000);
    char *tmp = (char*)malloc(sizeof(char) * 5000);
    res[0] = '1'; res[1] = '\0';     // res 初始化为 "1"
    int len = 1;                     // len 为 res 的有效长度
    while (--n) {
        int i = 0, j = 0;
        while(i < len) {             // 对 res 的每位字符 c 进行报数
            int count = 1;
            char c = res[i++];
            while (i < len && res[i] == c)    // 计算本轮报数结果，即本轮有几个 c
                i++,count++;
            tmp[j++] = count + '0';           // 将报数结果存入 tmp
            tmp[j++] = c;
        }
        tmp[j] = '\0';
        strcpy(res, tmp);                     // 将 tmp 复制到 res，并更新 res 长度
        len = j;
    }
    return res;
}
