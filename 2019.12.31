//反转链表

/*
反转从位置 m 到 n 的链表。请使用一趟扫描完成反转
输入: 1->2->3->4->5->NULL, m = 2, n = 4
输出: 1->4->3->2->5->NULL
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
       ListNode *dummy=new ListNode(-1);
       ListNode *prev=dummy;
       dummy->next=head;
        
       for(int i=0;i<m-1;++i)
       {//让prev指向要挪动的第一个结点的上一个，m-1次
           prev=prev->next;
       }
        
       ListNode *cur=prev->next;
       for(int j=0;j<n-m;++j)
       {
           ListNode *t=cur->next;
           cur->next=t->next;
           t->next=prev->next;
           prev->next=t;               
       }
        return dummy->next;
    }
};
