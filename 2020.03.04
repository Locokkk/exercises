//剪花布条

一块花布条，里面有些图案，另有一块直接可用的小饰条，里面也有一些图案。对于给定的花布条和小饰条，计算一下能从花布条中尽可能剪出几块小饰条来呢？
每组数据包含两个字符串s,t，分别是成对出现的花布条和小饰条，其布条都是用可见ASCII字符表示的，可见的ASCII字符有多少个，布条的花纹也有多少种花样。
花纹条和小饰条不会超过1000个字符长。

示例1
输入
abcde a3
aaaaaa aa

输出
0
3

#include<iostream>
#include<string>
using namespace std;
int main()
{
    string s1, s2;
    while(cin >> s1 >> s2)
    {
        int res = 0;
        size_t pos = 0;
        while((pos = s1.find(s2, pos)) != string::npos)
        {//注意此处写法及pos的赋值
            res++;
            pos += s2.size();
        }
        cout << res <<endl;
    }
    return 0;
}







//客似云来

NowCoder开了一家早餐店，这家店的客人都有个奇怪的癖好：他们只要来这家店吃过一次早餐，就会每天都过来；并且，所有人在这家店吃了两天早餐后，接下来每天都会带一位新朋友一起来品尝。
于是，这家店的客人从最初一个人发展成浩浩荡荡成百上千人：1、1、2、3、5……
现在，NowCoder想请你帮忙统计一下，某一段时间范围那他总共卖出多少份早餐（假设每位客人只吃一份早餐）

#include<iostream>
using namespace std;
int main()
{
    long long f[80] = {1, 1};
    for(int i = 2; i < 80; i++)
    {//先记录下每天吃早餐的人数，f[i - 1]表示原本会吃早餐的人数,f[i - 2]表示吃够两天会再拉一人的新增加的人数
        f[i] = f[i - 1] + f[i - 2];
    }
    int from = 0, to = 0;
    while(cin >> from >> to)
    {
        long long res = 0;
        for(int i = from; i <= to; i++)
        {
            res += f[i - 1];//注意为了对应上面，此处是f[i - 1],而不是f[i]
        }
        cout << res <<endl;
    }
    return 0;
}




