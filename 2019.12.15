//涂棋盘

//小易有一块n*n的棋盘，棋盘的每一个格子都为黑色或者白色，小易现在要用他喜欢的红色去涂画棋盘。
//小易会找出棋盘中某一列中拥有相同颜色的最大的区域去涂画，帮助小易算算他会涂画多少个棋格。

//输入数据包括n+1行：
//第一行为一个整数n(1 ≤ n ≤ 50),即棋盘的大小
//接下来的n行每行一个字符串表示第i行棋盘的颜色，'W'表示白色，'B'表示黑色
//输出小易会涂画的区域大小

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
  
int main()
{
    using namespace std;
    int n;
    while (cin >> n) {
        vector<vector<char> > matrix(n, vector<char>(n));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> matrix[i][j];
            }
        }
        int max = 0;
        for (int i = 0; i < n; i++) {
            int ret = 1;
            for (int j = 0; j < n - 1; j++) {
                if (matrix[j][i] == matrix[j + 1][i]) {
                    ret++;
                    if (ret > max) {
                        max = ret;
                    }
                }
                else {
                    ret = 1;
                }
            }
        }
        cout << max << endl;
    }
    return 0;
}

