//排序子序列
//牛牛定义排序子序列为一个数组中一段连续的子序列,并且这段子序列是非递增或者非递减排序的。牛牛有一个长度为n的整数数组A,他现在有一个任务是把数组A分为若干段排序子序列,牛牛想知道他最少可以把这个数组分为几段排序子序列.
如样例所示,牛牛可以把数组A划分为[1,2,3]和[2,2,1]两个排序子序列,至少需要划分为2个排序子序列,所以输出2

#include<iostream>
#include<vector>
using namespace std;
 
int main()
{
    int n;
    cin>>n;
    vector<int> array;
    array.resize(n);
    //读入数组
    int i=0;
    for(i=0;i<n;++i)
        cin>>array[i];
    i=0;
    int k=0;
    while(i<n)
    {
        if(array[i]<array[i+1] )
        {
            while(array[i]<=array[i+1])
            {
                i++;
            }
            k++;
            i++;
        }
        else if(array[i]==array[i+1])
            i++;
        else
        {
            while(array[i]>=array[i+1])
            {
                i++;
            }
            k++;
            i++;
        }
    }
    cout<<k;
    return 0;
}



//倒置字符串
//将单词倒置,标点符号不用倒置,例如：I like beijing. -> beijing. like I
#include<iostream>
#include<string>
using namespace std;
int main()
{
    string str1,str2;
    cin>>str1;
    while(cin>>str2)
    {
        str1.insert(0," ");
        str1.insert(0,str2);
    }
    cout<<str1<<endl;
    return 0;
}
