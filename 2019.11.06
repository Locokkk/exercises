//1.删除公共字符

//输入两个字符串，从第一个字符串中删除第二个字符串中出现的所有字符

#include<iostream>
#include<string>
#include<vector>
using namespace std;
int main(){
    string s1,s2;
    vector<char> str;
    int count[256]={0};
    getline(cin,s1);//输入一行
    getline(cin,s2);
    for(int i=0;i<s2.size();++i){
        count[s2[i]-'0']=1;
    }
    for(int i=0;i<s1.size();++i){
        if(count[s1[i]-'0']==1){
            s1=s1.erase(i,1); //删除从i开始的第一个字符，删除后指向被删除元素的后一个指针，所以需要i=i-1
            i=i-1;
        }
    }
    cout<<s1<<endl;
    system("pause");
    return 0;
}




//2.组队竞赛

//牛牛举办了一次编程比赛,参加比赛的有3*n个选手,每个选手都有一个水平值a_i.现在要将这些选手进行组队,一共组成n个队伍,即每个队伍3人.牛牛发现队伍的水平值等于该队伍队员中第二高水平值。
//例如:
//一个队伍三个队员的水平值分别是3,3,3.那么队伍的水平值是3
//一个队伍三个队员的水平值分别是3,2,3.那么队伍的水平值是3
//一个队伍三个队员的水平值分别是1,5,2.那么队伍的水平值是2
//为了让比赛更有看点,牛牛想安排队伍使所有队伍的水平值总和最大。
//如样例所示:
//如果牛牛把6个队员划分到两个队伍
//如果方案为:
//team1:{1,2,5}, team2:{5,5,8}, 这时候水平值总和为7.
//而如果方案为:
//team1:{2,5,8}, team2:{1,5,5}, 这时候水平值总和为10.
//没有比总和为10更大的方案,所以输出10.

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
class Solution
{
    public:
    void Sum(vector<int>& v,int n)
    {
        int len=v.size();
        long long ret=0;
        int count=0;
        sort(v.begin(),v.end());
        for(int i=len-2;i>=0;i-=2)
        {
            if(count>=n)
                break;
            
            ret+=v[i];
            count++;
        }
        cout<<ret<<endl;
    }
};

int main()
{
    int n=0;
    int ret=0;
    vector<int> v;
    cin>>n;
    v.resize(n*3);
    for(int i=0;i<n*3;i++)
    {
        cin>>v[i];
    }
    Solution s;
    s.Sum(v,n);
    return 0;
}
