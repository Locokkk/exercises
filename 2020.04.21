//数组中只出现一次的数字(两个)
//加了一点注释

class Solution {
public:
    int findIndex(int res)
    {//找异或结果中第一个1出现的位置
        int index = 0;
        while((res & 1) == 0)
        {
            res >>= 1;
            index++;
        }
        return index;
    }
    bool indexVal(int val, int index)
    {//判断该位置是0还是1,1true,0false
        val >>= index;
        if((val & 1) == 1)
        {
            return true;
        }
        return false;
    }
    void FindNumsAppearOnce(vector<int> data,int* num1,int *num2) {
        int res = 0;
        for(int i = 0; i < data.size(); i++)
        {
            res ^= data[i]; 
        }
        int index = findIndex(res);
        vector<int> v1, v2;
        for(int i = 0; i < data.size(); i++)
        {
            if(indexVal(data[i], index))
            {
                v1.push_back(data[i]);
            }
            else
            {
                v2.push_back(data[i]);
            }
        }
        *num1 = *num2 = 0;//最好做下处理
        for(int i = 0; i < v1.size(); i++)
        {
            *num1 ^= v1[i];
        }
        for(int i = 0; i < v2.size(); i++)
        {
            *num2 ^= v2[i];
        }
    }
};
