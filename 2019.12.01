//新的一个月，冲ya！

//小易的升级之路
//玩家的初始能力值为 a.在接下来的一段时间内,他将会依次遇见n个怪物,每个怪物的防御力为b1,b2,b3...bn. 
//如果遇到的怪物防御力bi小于等于小易的当前能力值c,那么他就能轻松打败怪物,并且使得自己的能力值增加bi;
//如果bi大于c,那他也能打败怪物,但他的能力值只能增加bi 与c的最大公约数.
//那么问题来了,在一系列的锻炼后,小易的最终能力值为多少?

//输入：对于每组数据,第一行是两个整数n(1≤n<100000)表示怪物的数量和a表示小易的初始能力值.
//第二行n个整数,b1,b2...bn(1≤bi≤n)表示每个怪物的防御力
//输出：对于每组数据,输出一行.每行仅包含一个整数,表示小易的最终能力值

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int greatestCommonDivisor(int a,int b)
{
    int temp;
    while(b){
        temp = b; 
        b = a%b; 
        a = temp;
    }
    return (a);
}

int main()
{
    int n,a;//n表示怪物数量，a表示玩家初始能力值
    while(cin>>n>>a)
    {
        vector<int> v(n);//存放每个怪物的防御力量
        for(int i=0;i<n;i++)
        {
            cin>>v[i];
        }
        for(int i=0;i<n;i++)
        {
            if(a>=v[i])
            {
                a+=v[i];
            }
            else
            {
                a+=greatestCommonDivisor(a,v[i]);
            }
        }
        cout<<a<<endl;
    }
    return 0;
}


//找出字符串中第一个只出现一次的字符(题面已经更新)

#include<iostream>
#include<string>
using namespace std;
int main()
{
    string s;
    while(getline(cin,s))
    {
        int flag=false;
        int count[128]={0};
        for(int i=0;i<s.size();i++)
        {
            count[s[i]]++;
        }
        for(int i=0;i<s.size();i++)
        {
            if(count[s[i]]==1)
            {
                flag=true;
                cout<<s[i]<<endl;
                break;
            }
        }
        if(flag==false)
        {
            cout<<"-1"<<endl;
        }
    }
        return 0;
}

