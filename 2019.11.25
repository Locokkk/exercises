//杨辉三角的变形

//            1
//         1  1  1
//      1  2  3  2  1
//   1  3  6  7  6  3  1
//1  4  10 16 19  16 10  4  1

//以上三角形的数阵，第一行只有一个数1，以下每行的每个数，是恰好是它上面的数，左上角数到右上角的数，3个数之和（如果不存在某个数，认为该数就是0）
//求第n行第一个偶数出现的位置。如果没有偶数，则输出-1。例如输入3,则输出2，输入4则输出3
//输入：输入一个int整数   输出：输出返回的int值

#include<iostream>
#include<vector>
using namespace std;
int main()
{//找规律...
    int n;
    while(cin>>n)
    {
        if(n<=2)
            cout<<-1<<endl;
        else
        {
            if(n%2==1)
                cout<<2<<endl;
            else if(n%4==2)
                cout<<4<<endl;
            else if(n%4==0)
                cout<<3<<endl;
        }
    }
    return 0;
}
