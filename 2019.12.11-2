//最小路径和(动态规划)
//给定一个m*n的网格，网格用非负数填充，找到一条从左上角到右下角的最短路径。注：每次只能向下或者向右移动。

class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        vector<vector<int>> res(grid);
        if(grid.empty() || grid[0].empty())
            return 0;
        const int M=grid.size();
        const int N=grid[0].size();
        for(int i=1;i<M;i++)
        {
            res[i][0]+=res[i-1][0];
        }
        for(int j=1;j<N;j++)
        {
            res[0][j]+=res[0][j-1];
        }
        for(int i=1;i<M;i++)
        {
            for(int j=1;j<N;j++)
            {
                res[i][j]+=min(res[i-1][j],res[i][j-1]);
            }
        }
        return res[M-1][N-1];
    }
}; 
