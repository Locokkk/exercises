//对称的二叉树(镜像)

/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    bool isSymmetrical(TreeNode* pRoot)
    {
        if(pRoot == nullptr)
        {
            return true;
        }
        return _isSymmetrical(pRoot->left, pRoot->right);
    }
    bool _isSymmetrical(TreeNode* left, TreeNode* right)
    {
        if(left == nullptr && right == nullptr)
        {
            return true;
        }
        if(left != nullptr && right != nullptr)
        {//注意主要是判断相应结点的值是否相等
            return (left->val == right->val) && _isSymmetrical(left->right, right->left) && _isSymmetrical(right->right, left->left);
        }
        return false;
    }
};
