//矩阵的最小路径和

#include<iostream>
#include<vector>
using namespace std;
int min_Path(const vector<vector<int> >& v)
{
    int row=v.size();
    int col=v[0].size();
    if(v.empty()||col==0||row==0)
        return 0;
    vector<vector<int> >dp(row,vector<int>(col,0));
    dp[0][0]=v[0][0];
    for(int i=1;i<row;i++)
    {
        dp[i][0]=dp[i-1][0]+v[i][0];
    }
    for(int j=1;j<col;j++)
    {
        dp[0][j]=dp[0][j-1]+v[0][j];
    }
    for(int i=1;i<row;i++)
    {
        for(int j=1;j<col;j++)
        {
            dp[i][j]=min(dp[i-1][j],dp[i][j-1])+v[i][j];
        }
    }
    return dp[row-1][col-1];
}
 
int main()
{
    int n,m;
    while(cin>>n>>m)
    {
       vector<vector<int> >v;
        int val;
        for(int i=0;i<n;i++)
        {
            vector<int> var;
            for(int j=0;j<m;j++)
            {
                cin>>val;
                var.push_back(val);
            }
            v.push_back(var);
        }
        int ret=min_Path(v);
        cout << ret << endl;
    }
    return 0;
}
