//N叉树的后续遍历

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<int> postorder(Node* root) {
        stack<Node*> sk1;
        stack<Node*> sk2;
        vector<int> res;
        if(root==nullptr) return res;
        sk1.push(root);
        while(!sk1.empty()){
            Node* tmp = sk1.top();
            sk2.push(tmp);
            sk1.pop();
            for(auto child:tmp->children){
                sk1.push(child);
            }
        }
        while(!sk2.empty()){
            res.push_back(sk2.top()->val);
            sk2.pop();
        }
        return res;
    }
};
