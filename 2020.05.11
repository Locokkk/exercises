//二叉搜索树的第k个结点

/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    void inOrder(TreeNode *pRoot, vector<TreeNode*>& res)
    {
        if(pRoot == nullptr)
            return;
        inOrder(pRoot->left, res);
        res.push_back(pRoot);
        inOrder(pRoot->right, res);
    }
    TreeNode* KthNode(TreeNode* pRoot, int k)
    {
        if(pRoot == nullptr || k <= 0)
        {
            return nullptr;
        }
        vector<TreeNode*> res;
        inOrder(pRoot, res);
        if(k > res.size())
            return nullptr;
        return res[k - 1];
    }
};
